Token: {       ({)
Token: int     (BASIC)
Token: i       (ID)
Token: ;       (;)
Token: int     (BASIC)
Token: j       (ID)
Token: ;       (;)
Token: float   (BASIC)
Token: v       (ID)
Token: ;       (;)
Token: float   (BASIC)
Token: x       (ID)
Token: ;       (;)
Token: float   (BASIC)
Token: [       ([)
Token: 100     (NUM)
Token: ]       (])
Token: a       (ID)
Token: ;       (;)
Token: while   (WHILE)
Token: (       (()
Token: true    (TRUE)
Token: )       ())
Token: {       ({)
Token: do      (DO)
Token: i       (ID)
Token: =       (=)
Token: i       (ID)
Token: +       (+)
Token: 1       (NUM)
Token: ;       (;)
Token: while   (WHILE)
Token: (       (()
Token: a       (ID)
Token: [       ([)
Token: i       (ID)
Token: ]       (])
Token: <       (<)
Token: v       (ID)
Token: )       ())
Token: ;       (;)
Token: do      (DO)
Token: j       (ID)
Token: =       (=)
Token: j       (ID)
Token: -       (-)
Token: 1       (NUM)
Token: ;       (;)
Token: while   (WHILE)
Token: (       (()
Token: a       (ID)
Token: [       ([)
Token: j       (ID)
Token: ]       (])
Token: >       (>)
Token: v       (ID)
Token: )       ())
Token: ;       (;)
Token: if      (IF)
Token: (       (()
Token: i       (ID)
Token: >=      (GE)
Token: j       (ID)
Token: )       ())
Token: break   (BREAK)
Token: ;       (;)
Token: x       (ID)
Token: =       (=)
Token: a       (ID)
Token: [       ([)
Token: i       (ID)
Token: ]       (])
Token: ;       (;)
Token: a       (ID)
Token: [       ([)
Token: i       (ID)
Token: ]       (])
Token: =       (=)
Token: a       (ID)
Token: [       ([)
Token: j       (ID)
Token: ]       (])
Token: ;       (;)
Token: a       (ID)
Token: [       ([)
Token: j       (ID)
Token: ]       (])
Token: =       (=)
Token: x       (ID)
Token: ;       (;)
Token: }       (})
Token: }       (})
End of file reached
